<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:american-flights-api="http://www.mulesoft.org/schema/mule/american-flights-api" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/american-flights-api http://www.mulesoft.org/schema/mule/american-flights-api/current/mule-american-flights-api.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getFlights" doc:id="34402dde-a80c-4815-95db-b198e1ffda65" >
		<set-variable value="#[attributes.queryParams.airline]" doc:name="airline" doc:id="03e908b2-53b5-4cef-a9b1-37cc5233a729" variableName="airline"/>
		<flow-ref doc:name="setCode" doc:id="bb24571e-f7d9-4f8a-9e5c-970e02055473" name="setCode"/>
		<validation:is-true doc:name="Is valid destination" doc:id="0df72bb4-f2d0-4633-a53e-406ba9d3f7c5" expression="#[['SFO','LAX','CLE','PDX','PDF'] contains vars.code]" message="#['Invalid destination' ++ ' ' ++ (vars.code default ' ')]">
			<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:INVALID_DESTINATION" />
		</validation:is-true>
		<choice doc:name="airline" doc:id="55cafb71-d55f-4810-9a32-9fa1b5a0cab6" >
			<when expression='#[vars.airline == "american"]' >
				<flow-ref doc:name="getAmericanFlights" doc:id="6ac04be2-1d28-4780-ae10-eed768dac8c8" name="getAmericanFlights"/>
			</when>
			<when expression='#[vars.airline == "united"]' >
				<flow-ref doc:name="getUnitedFlights" doc:id="ba9337c0-044d-4492-b1b2-8ba1da7f518f" name="getUnitedFlights"/>
			</when>
			<when expression='#[vars.airline == "delta"]' >
				<flow-ref doc:name="getDeltaFlights" doc:id="ed7b58d0-5199-4449-b408-44eb03e65239" name="getDeltaFlights"/>
			</when>
			<otherwise >
				<flow-ref doc:name="getAllAirlineFlights" doc:id="04828628-d994-4ef1-8013-8a5131d1e2b5" name="getAllAirlineFlights"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="[Flight] to JSON" doc:id="fcdcdd19-baee-49a4-9af1-4db7cbed3619" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="0b040154-4a0a-4e80-947c-1703e7c67b75" />
	</flow>
	<flow name="getAllAirlineFlights" doc:id="2a50e4ca-9b0b-44f5-974e-58d1abd86989" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="34a2136d-5152-413c-b9b4-05f9120a0079" >
			<route >
				<try doc:name="Try" doc:id="b16d34c7-eec4-4ec5-8b49-98c0a6b43e52" >
					<flow-ref doc:name="getAmericanFlights" doc:id="4f920b11-f15a-48d6-8d2b-4c3bb73b4509" name="getAmericanFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="2f05b11f-31db-4a3e-9175-ddabc42375e5" type="ANY">
							<ee:transform doc:name="[]" doc:id="93b1e3c7-d11f-4294-b177-bd2a7db8c1e4" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="2a95fcc9-0638-417d-86d7-c3793508613f" >
					<flow-ref doc:name="getUnitedFlights" doc:id="ba5deb24-bf35-49fa-9f54-235a53e9d1de" name="getUnitedFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="bdf33584-e787-4a62-96fa-38f377293c74" type="ANY">
							<ee:transform doc:name="[]" doc:id="c37c9765-176a-47a4-8b18-dc284bfc20f5" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="caa69f71-2ece-4189-b61c-734ca1b2529f" >
					<flow-ref doc:name="getDeltaFlights" doc:id="ede6d10b-2f30-4e15-a311-4dd2486685d3" name="getDeltaFlights"  />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="c32f45b2-3fc6-463a-a1fb-ed87709207b2" type="ANY">
							<ee:transform doc:name="[]" doc:id="926e239d-72e7-474d-a4e6-86f3ea309563" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
		</scatter-gather>
		<ee:transform doc:name="flatten to [Flight]" doc:id="87509f9c-246a-4c32-bccf-c3171c1cdabb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
flatten(payload..payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="9c6c9f53-f573-4156-9b23-81cafeeec8a2" />
	</flow>
	<sub-flow name="setCode" doc:id="bb10a2ba-afbd-4bde-883b-01cead0d8b4e" >
		<set-variable value="#[attributes.queryParams.code]" doc:name="Set Variable" doc:id="8f56ad60-776a-4945-ae7c-9825a5f130b0" variableName="code"/>
	</sub-flow>
	<flow name="getAmericanFlights" doc:id="becb2e18-00d9-4271-969e-6d7df114021a" >
		<american-flights-api:get-flights doc:name="Get flights" doc:id="413d7d2f-bcf8-4bfb-bbc4-69bb33c8eecc" config-ref="American_Flights_API_Config" client-id="${american.client_id}" client-secret="${american.client_secret}" destination="#[vars.code]"/>
		<ee:transform doc:name="JSON to [Flight]" doc:id="6bb57a28-b8eb-4433-966a-5771216585ef">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airlineName: "American",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane."type",
	price: payload01.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="870d2647-f3d4-4a9c-86a6-e3c0e29b6fbe" />
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="46aabe8f-5544-4220-9a2d-70d28edf97a5" type="AMERICAN-FLIGHTS-API:BAD_REQUEST">
				<ee:transform doc:name="No flights" doc:id="bb7b773a-15ca-4369-ac4d-d69f1f7061be">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": "No flights to " ++ vars.code as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="a0cde1fb-fe90-49eb-9227-4758b490fef7" variableName="httpStatus" />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="getUnitedFlights" doc:id="d03dfb4e-0263-4271-af40-fa439def55f2" >
		<http:request method="GET" doc:name="Get flights" doc:id="50f1ac06-af68-4222-bac5-5357bf2d8ea6" config-ref="HTTP_Request_configuration_training" path="/united/flights/{dest}">
			<http:uri-params ><![CDATA[#[output applicaton/java
---
{
	"dest" : vars.code
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="JSON to [Flight]" doc:id="687e171a-b9e1-4e92-9bfc-d7600b186224" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.flights map ( flight , indexOfFlight ) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="cc2c81da-2355-49c2-83cc-b7bff30b7fa8" />
	</flow>
	<flow name="getDeltaFlights" doc:id="b236dc68-d494-4678-a134-496c1efc6d58" >
		<ee:transform doc:name="Pass code" doc:id="a71571b9-d499-480b-9b2f-aa1ffe80b467" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: vars.code as String
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<wsc:consume operation="findFlight" doc:name="Get flights" doc:id="b64420fe-5f14-4584-b92c-8de2de3108e6" config-ref="Delta_Web_Service_Consumer_Config"/>
		<ee:transform doc:name="SOAP to [Flight]" doc:id="ca0f8ae1-80b8-49a5-9ad1-6e482327ab13" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#findFlightResponse.*return map ( return , indexOfReturn ) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="ddf29559-2a9f-460d-aa4d-2ffe0f060d7a" />
	</flow>
</mule>
